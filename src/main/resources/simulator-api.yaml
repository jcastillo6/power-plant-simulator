openapi: 3.0.0
info:
  title: Power Plant Simulator - OpenAPI 3.0
  description: |-
    API for simulating and managing solar power plants network.
    Provides functionality to:
    * Load power plants
    * Calculate output
    * Monitor network state
  termsOfService: https://swagger.io/terms/
  contact:
    email: castillo.guerra@gmail.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.12
externalDocs:
  description: Find out more about Swagger
  url: https://swagger.io
servers:
  - url: /solar-simulator/
tags:
  - name: Simulator
    description: Everything about your simulation
    externalDocs:
      description: Find out more
      url: https://swagger.io
security:
  - ApiKeyAuth: [ ]
paths:
  /upload:
    post:
      tags:
        - Simulator
      summary: Upload power plants
      description: Upload power plant file
      operationId: uploadPowerPlantFile
      security:
        - ApiKeyAuth: [ ]
      requestBody:
        description: Upload power plant file
        content:
          multipart/form-data:
            schema:
              type: object
              required: [ "file", "days" ]
              properties:
                days:
                  type: integer
                  format: int32
                  minimum: 0
                  description: number of days to perform the calculation
                file:
                  type: string
                  format: binary
                  description: JSON file containing up to 100 objects with 2 attributes each
                  example:
                    file: "[{\"name\":\"Power plant 1\",\"age\":854},{\"name\":\"Power plant 2\",\"age\":473}]"
      responses:
        '200':
          description: Successful operation
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkUploadResponse'
        '400':
          description: Invalid JSON format or content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Missing API key or invalid authentication credentials
          content:
            application/json:
              schema:
                $ref:  '#/components/schemas/Error'
        '403':
          description: API key doesn't have sufficient permissions
          content:
            application/json:
              schema:
                $ref:  '#/components/schemas/Error'
        '413':
          description: Request payload too large
          content:
            application/json:
              schema:
                $ref:  '#/components/schemas/Error'
        '429':
          description: Too Many Requests
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref:  '#/components/schemas/Error'
  /load:
    post:
      tags:
        - Simulator
      summary: Add a new power plants
      description: Add a new power plants as a json array
      operationId: loadPowerPlants
      security:
        - ApiKeyAuth: [ ]
      requestBody:
        description: Create a new power plants request should be an array
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/PowerPlant'
        required: true
      responses:
        '205':
          description: Successful operation
        '400':
          description: Invalid JSON format or content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Missing API key or invalid authentication credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: API key doesn't have sufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '413':
          description: Request payload too large
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too Many Requests
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /output/{days}:
    get:
      tags:
        - Simulator
      summary: Get total power output
      description: Calculate total power output for specified number of days
      operationId: getTotalOutput
      security:
        - ApiKeyAuth: [ ]
      parameters:
        - name: days
          in: path
          description: Number of days to calculate output
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
        - name: If-None-Match
          in: header
          description: ETag from a previous request. A 304 will be returned if resource hasn't changed
          required: false
          schema:
            type: string
        - name: If-Modified-Since
          in: header
          description: Timestamp of the last retrieved data
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Successful operation
          headers:
            ETag:
              description: Entity tag for cache validation
              schema:
                type: string
            Cache-Control:
              description: Caching directives
              schema:
                type: string
              example: "public, max-age=3600"
            Last-Modified:
              description: Timestamp of when the resource was last modified
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TotalOutputResponse'
              example:
                total-output-in-kwh: 1234.56
        '304':
          description: Not Modified - Resource hasn't changed since the ETag specified in If-None-Match
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Invalid JSON format or content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Missing API key or invalid authentication credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: API key doesn't have sufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '413':
          description: Request payload too large
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too Many Requests
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /network/{days}:
    get:
      tags:
        - Simulator
      summary: Get network status at specific days
      description: Returns the state of all power plants in the network after specified number of days
      operationId: getNetworkStatus
      security:
        - ApiKeyAuth: [ ]
      parameters:
        - name: days
          in: path
          description: Number of days to calculate network state
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
        - name: If-None-Match
          in: header
          description: ETag from a previous request. A 304 will be returned if resource hasn't changed
          required: false
          schema:
            type: string
        - name: If-Modified-Since
          in: header
          description: Timestamp of the last retrieved data
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Successful operation
          headers:
            ETag:
              description: Entity tag for cache validation
              schema:
                type: string
            Cache-Control:
              description: Caching directives
              schema:
                type: string
              example: "public, max-age=3600"
            Last-Modified:
              description: Timestamp of when the resource was last modified
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PowerPlantOutput'
              example:
                - name: "Power plant 1"
                  age: 854
                  output-in-kwh: 123.45
                - name: "Power plant 2"
                  age: 473
                  output-in-kwh: 67.89
        '400':
          description: Invalid JSON format or content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Missing API key or invalid authentication credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: API key doesn't have sufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '413':
          description: Request payload too large
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too Many Requests
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: X-API-Key
      in: header
      description: API key to authenticate requests. Obtain from the API gateway.
  headers:
    X-RateLimit-Limit:
      description: The maximum number of requests allowed per time window
      schema:
        type: integer
        example: 100
    X-RateLimit-Remaining:
      description: The number of requests remaining in the current time window
      schema:
        type: integer
        example: 95
    X-RateLimit-Reset:
      description: |
        The time when the current rate limit window resets.
        Represented as Unix timestamp in UTC (seconds since epoch).
        Use HTTP date format as specified in RFC 7231.
      schema:
        type: string
        format: date-time
        example: "2024-03-21T17:32:28Z"
  schemas:
    Error:
      type: object
      properties:
        code:
          type: string
          enum:
            - VALIDATION_ERROR
            - RATE_LIMIT_EXCEEDED
            - INVALID_API_KEY
            - RESOURCE_NOT_FOUND
            - INTERNAL_ERROR
        message:
          type: string
        details:
          type: object
          additionalProperties: true
    PowerPlant:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
          pattern: '^[a-zA-Z0-9- ]+$'
        age:
          type: integer
          minimum: 0
          maximum: 100000
      required:
        - name
        - age
    PowerPlantOutput:
      allOf:
        - $ref: '#/components/schemas/PowerPlant'
        - type: object
          properties:
            output-in-kwh:
              type: number
              format: decimal
          required:
            - output-in-kwh
    NetworkUploadResponse:
      type: object
      properties:
        produced-kwh:
          type: number
          format: decimal
          description: Total power produced in kilowatt-hours
        network:
          type: array
          items:
            $ref: '#/components/schemas/PowerPlant'
      example:
        produced-kwh: 1234.56
        network:
          - name: "Power plant 1"
            age: 854
          - name: "Power plant 2"
            age: 473
    TotalOutputResponse:
      type: object
      properties:
        total-output-in-kwh:
          type: number
          format: decimal
          description: Total power output in kilowatt-hours
      required:
        - total-output-in-kwh
  responses:
    Error:
      description: Error response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'